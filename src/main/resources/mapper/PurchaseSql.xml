<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.mapper.PurchaseMapper">
    <insert id="createPurchase" parameterType="data.dto.PurchaseDto$Request" useGeneratedKeys="true" keyProperty="id">
        insert into nthing.purchase
        (
            title
            ,description
            ,latitude
            ,longitude
            ,date
            ,denominator
            ,numerator
            ,price
            ,place
            ,manager_id
            ,category_id
            ,status
            ,updated_at
        )
        values
        (
            #{title}
            ,#{description}
            ,#{latitude}
            ,#{longitude}
            ,#{date}
            ,#{denominator}
            ,#{numerator}
            ,#{price}
            ,#{place}
            ,#{manager_id}
            ,#{category_id}
            ,0
            ,now()
        )
    </insert>
    <select id="findAllPurchase" resultType="data.dto.PurchaseDto$Summary" parameterType="map">
        select
            a.id
            ,a.title
            ,a.latitude
            ,a.longitude
            ,a.date
            ,a.denominator
            ,a.numerator
            ,a.price
            ,a.place
            ,a.status
            ,(
                select
                    count(*)
                from
                    nthing.like b
                where true
                    and b.user_id = #{user_id}
                    and b.purchase_id = a.id
            ) as is_liked
        from
            nthing.purchase as a
        where
            a.delete_yn = 0
        <where>
            <if test="search_keyword != null and search_keyword != ''">
                a.title like CONCAT('%',#{search_keyword},'%')
            </if>
        </where>
        <if test="sort != null and sort != ''">
            order by ${sort}
        </if>
    </select>
    <select id="findPurchaseById" resultType="data.dto.PurchaseDto$Detail" parameterType="int">
        select
            a.id
            ,a.title
            ,a.description
            ,a.latitude
            ,a.longitude
            ,a.date
            ,a.denominator
            ,a.numerator
            ,a.status
            ,a.price
            ,a.place
            ,a.updated_at
            ,a.manager_id
            ,a.category_id
            ,c.name as category_name
            ,(
                select
                    count(*)
                from
                    nthing.like b
                where true
                  and b.user_id = 3
                  and b.purchase_id = a.id
            ) as is_liked
        from
            nthing.purchase as a
            left join category c on a.category_id = c.id
        where
            a.id = #{id}
            and a.delete_yn = 0
    </select>
    <update id="updatePurchase" parameterType="data.dto.PurchaseDto$Request">
        update purchase
        set
            title = #{title}
            ,description = #{description}
            ,latitude = #{latitude}
            ,longitude = #{longitude}
            ,date = #{date}
            ,denominator = #{denominator}
            ,numerator = #{numerator}
            ,status = #{status}
            ,price = #{price}
            ,place = #{place}
            ,updated_at = now()
            ,category_id = #{category_id}
        where
            id = #{id}
            and manager_id = #{manager_id}
            and delete_yn = 0
    </update>
    <delete id="deletePurchase" parameterType="int">
        UPDATE purchase SET
            delete_yn = 1
            ,deleted_at = NOW()
        WHERE
            id = #{id}
    </delete>
</mapper>